<!--
  ~ Copyright 2004-2011 ICEsoft Technologies Canada Corp. (c)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions an
  ~ limitations under the License.
  -->

<ui:fragment xmlns="http://www.w3.org/1999/xhtml"
             xmlns:h="http://java.sun.com/jsf/html"
             xmlns:f="http://java.sun.com/jsf/core"
             xmlns:ui="http://java.sun.com/jsf/facelets"
             xmlns:mobic="http://www.icesoft.com/icefaces/mobile/composite">

    <mobic:fieldsetGroup styleClass="exampleDescription">

        <p>The camcorder component allows JSF applications to access a mobile
            devicesâ€™ video camera. The component renders a simple button that
            when pressed launches the native video camera application on the
            device. Once a video has been taken and accepted the user is returned
            to the web application. Video data captured by the device is
            inserted in the calling form and data is submitted to the server
            via a standard JSF form post.</p>

        <p>
            Value binding is achieved via Map object so that other important
            video data can be stored along with the video file data. A typical
            video component setup looks as follows:
        </p>

<pre>
&lt;mobi:camcorder
    value="#{'#'}{myBean.map}"/&gt;
</pre>

        <p>
            When the containing form is submitted to the server the setter
            setMap() is called on the Bean. The JSF developer now has the device
            video file to work with as they please.
        </p>

        <p>Device video access is only accessible if the application is running
            in an ICEfaces device container. If the application is not running
            in an ICEfaces device container then the component will display a
            file upload input component. </p>

    </mobic:fieldsetGroup>

</ui:fragment>