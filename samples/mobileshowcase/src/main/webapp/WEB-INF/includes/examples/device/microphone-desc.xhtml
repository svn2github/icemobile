<!--
  ~ Copyright 2004-2011 ICEsoft Technologies Canada Corp. (c)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions an
  ~ limitations under the License.
  -->

<ui:fragment xmlns="http://www.w3.org/1999/xhtml"
             xmlns:h="http://java.sun.com/jsf/html"
             xmlns:f="http://java.sun.com/jsf/core"
             xmlns:ui="http://java.sun.com/jsf/facelets" 
             xmlns:mobi="http://www.icesoft.com/icefaces/mobile/component">

    <mobi:fieldsetGroup styleClass="exampleDescription">

        <p>The microphone component allows JSF applications to access a mobile
            devicesâ€™ microphone. The component renders a simple button that when
            pressed toggles the on and off state of the devices microphone.
            Sound data captured by the device is inserted in the calling form
            and data is submitted to the server via a standard JSF form post.</p>

        <p>
            Value binding is achieved via Map object so that other important
            sound data can be stored along with the sound file data. A typical
            microphone component setup looks as follows:
        </p>

<pre>
&lt;mobi:microphone
    value="#{'#'}{myBean.map}"/&gt;
</pre>

        <p>
            When the containing form is submitted to the server the setter
            setMap() is called on the Bean. The JSF developer now has the device
            sound file to work with as they please.
        </p>

    </mobi:fieldsetGroup>

</ui:fragment>