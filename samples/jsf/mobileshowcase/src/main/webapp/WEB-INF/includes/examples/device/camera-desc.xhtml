<!--
  ~ Copyright 2004-2013 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
             xmlns:h="http://java.sun.com/jsf/html"
             xmlns:f="http://java.sun.com/jsf/core"
             xmlns:ui="http://java.sun.com/jsf/facelets"
             xmlns:mobi="http://www.icesoft.com/icefaces/mobile/component">

    <mobi:fieldsetGroup styleClass="exampleDescription">
    <mobi:fieldsetRow>
        <p>The camera component allows JSF applications to access a mobile device
            camera. The component renders a simple button that, when pressed, launches
            the native camera application on the device. Once a picture has been taken
            and accepted, the user is returned to the web application. Image data
            captured by the device is inserted in the calling form and data is
            submitted to the server via a standard JSF form post.</p>
            
         <p>
            The button label can be changed after a photo has been taken to 
            notify the user. The 'buttonLabel' attribute is first displayed, and after
            a photo has been captured, the 'captureMessageLabel' attribute value is
            then shown as the button label. 
        </p>

        <p>
            Value binding is achieved via a Map object so that other important
            camera image data can be stored along with the image file data. A
            typical camera component setup looks as follows:
        </p>
    </mobi:fieldsetRow>
    <mobi:fieldsetRow>
<pre>
&lt;mobi:camera
  value="#<span></span>{myBean.map}"
  buttonLabel="Camera" 
  captureMessageLabel="Thanks"/&gt;
</pre>
    </mobi:fieldsetRow>
    <mobi:fieldsetRow>
        <p>
            When the containing form is submitted to the server the setter
            setMap() is called on the bean, making the camera image 
            available to the application.
        </p>

        <p>The camera is only accessible if the application is running
            in an ICEmobile device container or if ICEmobile SX has been registered, 
            otherwise the component will display a file upload input component. </p>
    </mobi:fieldsetRow>
    </mobi:fieldsetGroup>

</ui:composition>