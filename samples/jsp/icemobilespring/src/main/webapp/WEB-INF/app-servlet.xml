<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2004-2013 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
    
    <!-- #################### Application configuration ##################### -->
    
    <context:component-scan base-package="org.icemobile.samples.spring" />
    
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    
    <!-- Maps '/' requests to the 'home' view -->
    <mvc:view-controller path="/jqmmic" view-name="jqmmic"/>
    <mvc:view-controller path="/" view-name="index"/>

    <context:component-scan base-package="org.icemobile.samples.spring.controllers"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- #################### ICEmobile standard configuration ##################### -->

    <!-- Only needed because we require fileupload in the 
        org.springframework.samples.mvc.fileupload package -->
    <bean id="multipartResolver"
                class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    
    <mvc:annotation-driven>
       <mvc:argument-resolvers>
           <!-- used for @ICEmobileResource method argument annotation support -->
           <bean class="org.icemobile.spring.handler.ResourceUploadArgumentResolver"/>
       </mvc:argument-resolvers>
    </mvc:annotation-driven>
 
    <!-- used ICEmobileSXController -->
    <context:component-scan base-package="org.icemobile.spring.controller"/>
    <context:component-scan base-package="org.icemobile.spring.handler"/>
    
    <!-- for iOS media support -->
    <bean id="rangingResourceHandler"
                class="org.icemobile.spring.handler.RangingResourceHttpRequestHandler"/>
    
   <!-- for ResourceStore request support -->
   <bean id="resourceStoreRequestHandler"
               class="org.icemobile.spring.handler.ResourceStoreRequestHandler">
          <property name="resourceStore" ref="basicResourceStore"/>
   </bean>

   <!-- for Augmented Reality example ResourceStore request support -->
   <bean id="arResourceStoreRequestHandler"
               class="org.icemobile.spring.handler.ResourceStoreRequestHandler">
        <property name="resourceStore" ref="arResourceStore"/>
   </bean>
    
    
    <!-- handle all requests to /media/* with the RangingResourceRequestHandler 
        for iOS media support -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>/media/**=rangingResourceHandler</value>
        </property>
    </bean>
    
    <!-- handle all requests to /icemobile-store/* with the ICEmobileResourceStoreRequestHandler 
       for iOS media support 
       Augmented Reality media requests routed through /icemobile-ar-store/*
       -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>/icemobile-store/**=resourceStoreRequestHandler</value>
            <value>/icemobile-ar-store/**=arResourceStoreRequestHandler</value>
        </property>
    </bean>
   
    <!-- use Spring resource request handler to serve resources from icemobile-jsp.jar -->
    <mvc:resources mapping="/icemobile-resources/**" 
        location="classpath:/META-INF/web-resources/"/>
    
    <!-- intercept requests for both simulator and regular uploads from ICEmobile -->
    <mvc:interceptors>
       <bean class="org.icemobile.spring.handler.SimulatorResourceUploadInterceptor" />
   </mvc:interceptors>
    
    <!-- #################### JDBC CONFIGURATION ##################### -->
    
    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- Database initializer. If any of the script fails, the initialization stops. -->
    <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. 
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="${jdbc.initLocation}"/>
    </jdbc:initialize-database-->
    
    <!-- JNDI DataSource for JEE environments -->
    <!--
    <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/icemobilespring"/>
    -->
    
    <!-- DataSource configuration for Apache Commons DBCP. -->
    <!-- bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
            p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
            p:username="${jdbc.username}" p:password="${jdbc.password}"/-->
    
    <!-- Transaction manager for a single JDBC DataSource (alternative to JTA) -->
    <!-- bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
            p:dataSource-ref="dataSource"/-->
    
    <!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) -->
    <!--
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>
    -->
    
    <tx:annotation-driven/>
    
    <!-- bean class="org.icemobile.spring.handler.support.JdbcResourceStore"
            name="icemobileResourceStore"
        p:dataSource-ref="dataSource" p:tableName="uploads">
    </bean-->
    
    <!-- A Basic ICEmobile Resource Store that does not resource processing -->
    <bean class="org.icemobile.spring.handler.support.MapFileStore"
            name="basicResourceStore">
    </bean>
    
    <!-- A Resource Store that scales all uploaded images -->
    <bean class="org.icemobile.spring.handler.support.MapFileStore"
            name="arResourceStore">
           <property name="resourceAdaptor" ref="scaledImageResourceAdapter"/>
    </bean>
    
    <bean class="org.icemobile.samples.spring.ScaledImageFileResourceAdapter" 
        name="scaledImageResourceAdapter" />    

</beans>
