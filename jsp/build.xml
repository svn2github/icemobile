<!--
  ~ Copyright 2004-2013 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<project name="icemobile-jsp" default="all" basedir="." xmlns:ice="urn:ICEsoft">

    <property file="local.properties"/>
    <property file="../build.properties"/>
    <property file="build.properties"/>
    <property name="root.offset" value=".."/>
    <property name="lib.dir" location="../lib"/>
    <property name="core.build" location="../core/build"/>
    <property name="java.dir" location="src/main/java"/>
    <property name="resources.dir" location="src/main/resources"/>
    <property file="${root.offset}/build.properties"/>
	<property name="conf.dir" location="./conf"/>
    <property name="product.info" value="org/icemobile/ProductInfo.java"/>
	<property name="build.resources" value="${build.dir}/resources"/>
	<property name="build.meta" value="${build.resources}/META-INF"/>
	<property name="build.web.resources" value="${build.meta}/web-resources"/>
	
	<condition property="version.string" value="${version.primary}.${version.secondary}.${version.tertiary}.${release.type}">
        <isset property="release.type" />
    </condition>
    <property name="version.string" value="${version.primary}.${version.secondary}.${version.tertiary}" />

	<property name="javadoc.title" value="${product} ${product.lib} Java API Documentation" />
    <property name="javadoc.header" value="${product} ${product.lib} ${version.string}&lt;br&gt;Java API Documentation" />
    <property name="tld.title" value="${product} ${product.lib} ${version.string} Tag Library Reference" />
    
	
	<propertyset id="product.info">
        <propertyref name="company"/>
        <propertyref name="product"/>
        <propertyref name="version.primary"/>
        <propertyref name="version.secondary"/>
        <propertyref name="version.tertiary"/>
        <propertyref name="release.type"/>
        <propertyref name="build.number"/>
        <propertyref name="revision"/>
    </propertyset>

	
    <property name="jar.file.name" value="${icemobile-jsp.lib.name}.jar"/>
    <property name="doc" location="build/docs/"/>
    <property name="tld.doc" location="${doc}/tld"/>
    <!-- common theme location  -->
    <property name="theme.build.dir" location="../resources/build/themes"/>
	<property name="theme.src.dir" location="../resources/themes"/>
    <property name="theme.base.dir" value="base"/>
	<property name="theme.base3.dir" value="base3" />
	<!-- common javascript location -->
	<property name="javascript.dir" location="../resources/javascript"/>
    <!-- component TLD location --> 
    <property name="tld.jar" location="${lib.dir}"/>
    <property name="tld.file.src"
              location="./src/main/resources/META-INF/icemobile.tld"/>
    <property name="tld.file.merged"
              location="../core/build/exploded-jsp/META-INF/components.tld"/>
    <property name="tld.file.dest"
              location="${build.meta}/icemobile.tld"/>
	<property name="compile.target" value="1.5"/>
	<property name="compile.source" value="1.5"/>
	<property name="compile.debug" value="true"/>

    <!-- theme location in jar  -->
    <property name="theme.resources.dir"
              location="${resources.dir}/META-INF/web-resources/org.icefaces.component.skins"/>
	
	<!-- javascript location in jar -->
	<property name="javascript.resources.dir"
              location="${resources.dir}/META-INF/web-resources/javascript"/>

    <condition property="version.string"
               value="${version.primary}.${version.secondary}.${version.tertiary}.${release.type}">
        <isset property="release.type"/>
    </condition>
    <property name="version.string"
              value="${version.primary}.${version.secondary}.${version.tertiary}"/>
	
	<path id="core.classpath">
        <fileset dir="${lib.dir}" includes="*.jar" excludes="**/javax.faces.jar,**/jsp-api.jar,**/javax.servlet.jsp.jar,**/${icemobile-jsp.lib.name}.jar,**/${icefaces-mobi-lib-name}.jar"/>
    </path>
	
	<path id="jsp.classpath">
        <fileset dir="${lib.dir}" includes="*.jar" excludes="**/javax.faces.jar,**/icefaces-mobi.jar"/>
    </path>
	
    <import file="../resources/build.xml"/>

    <tstamp>
        <format property="build.time" pattern="yyyy-MM-dd hh:mm:ss"/>
    </tstamp>

    <target name="product.info" description="update product information">
        <!-- <buildnumber/>  -->
        <copy file="${conf.dir}/${product.info}"
              tofile="${java.dir}/${product.info}"
              overwrite="true"/>
        <replace file="${java.dir}/${product.info}">
            <replacefilter token="@release.type@" value="${release.type}"/>
            <replacefilter token="@version.primary@"
                           value="${version.primary}"/>
            <replacefilter token="@version.secondary@"
                           value="${version.secondary}"/>
            <replacefilter token="@version.tertiary@"
                           value="${version.tertiary}"/>
            <replacefilter token="@build.number@" value="${build.number}"/>
            <replacefilter token="@revision@" value="${revision}"/>
        </replace>

    </target>

    <target name="clean.product.info">
        <delete file="${java.dir}/${product.info}" failonerror="no"/>
    </target>

    <target name="pre.compile" description="prepare for compilation"
            depends="">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${dist.dir}"/>
    </target>
	
	<target name="copy-core" description="copy the compiled core classed">
        <copy todir="${build.dir}/classes">
            <fileset dir="${core.build}/exploded" includes="**/*.class"/>
        </copy>
    </target>

    <target name="compile" depends="pre.compile, product.info, copy-core"
            description="compile classes">
        <compile/>
    </target>

    <target name="init-skip-css-properties"
            description="Test theme source dates against last successful run to avoid unnecessary work">
        <uptodate targetfile="${build.dir}/skins/in/skins.done"
                  property="skins.skip">
            <srcfiles dir="${theme.src.dir}" includes="**/**"/>
        </uptodate>
        <echo message="Skip CSS: ${skins.skip}"/>
    </target>

    <target name="skins" depends="prepare-resources,init-skip-css-properties"
            unless="skins.skip">
    	
    	<ice:subant target="compile.scss">
	        <fileset dir="../resources" includes="build.xml" />
	    </ice:subant>
    	
        <!-- create staging area for skins -->
        <mkdir dir="${build.dir}/skins/in"/>
        <mkdir dir="${build.dir}/skins/out"/>

    	<buildSkin skin="archaic" />
    	<buildBaseSkin />
    	<buildCSS3Skin skin="bberry" />
    	<buildCSS3Skin skin="bb10" />
		<buildCSS3Skin skin="ipad" />
		<buildCSS3Skin skin="iphone" />
        <buildCSS3Skin skin="android_light" />
        <buildCSS3Skin skin="android_dark" />
		<buildCSS3Skin skin="jqm" />
    	<buildSimulatorSkin/>

        <replaceregexp match="(\/\*([\s\S]*?)(Copyright)+([\s\S]*?)\*\/)" flags="mg" replace="">
            <fileset dir="${build.dir}/skins/in" includes="**/*.css"></fileset>
        </replaceregexp>

        
        <!-- concatenate -->
        <!-- Generate a single CSS file per skin -->
        <concatskin name="iphone" inputdir="${build.dir}/skins/in"
                    outputdir="${build.dir}/skins/out"/>
        <concatskin name="bberry" inputdir="${build.dir}/skins/in"
                    outputdir="${build.dir}/skins/out"/>
    	<concatskin name="bb10" inputdir="${build.dir}/skins/in"
    	                    outputdir="${build.dir}/skins/out"/>
    	<concatskin name="base" inputdir="${build.dir}/skins/in"
    	                            outputdir="${build.dir}/skins/out"/>
        <concatskin name="ipad" inputdir="${build.dir}/skins/in"
                    outputdir="${build.dir}/skins/out"/>
		<concatskin name="archaic" inputdir="${build.dir}/skins/in"
                    outputdir="${build.dir}/skins/out"/>
        <concatskin name="android_light" inputdir="${build.dir}/skins/in"
                    outputdir="${build.dir}/skins/out"/>
    	<concatskin name="android_dark" inputdir="${build.dir}/skins/in"
                    outputdir="${build.dir}/skins/out"/>
    	<concatskin name="jqm" inputdir="${build.dir}/skins/in"
    	                    outputdir="${build.dir}/skins/out"/>
        
        <!-- copy over to resources folder for jar creation. -->
        <copy todir="${build.web.resources}/org.icefaces.component.skins">
            <fileset dir="${build.dir}/skins/out" includes="**"/>
        </copy>
        <touch file="${build.dir}/skins/in/skins.done"/>
    </target>

    <target name="all" depends="jar" description="build all">
    </target>
	
	<target name="prepare-resources" description="prepare the js resources">
		
		<property name="tmp" value="${build.dir}/tmp.js"/>
		
		<mkdir dir="${build.web.resources}"/>
		<copy tofile="${build.web.resources}/javascript/icemobile.js">
            <fileset file="src/main/javascript/icemobile.js"/>
        </copy>
		<copy todir="${build.web.resources}/javascript/">
            <fileset dir="${javascript.dir}" includes="*"/>
        </copy>
		<delete file="${tmp}"/>

        <!-- tld.file.src being newer than tld.file.merged is an error -->
        <uptodate property="tldSrcNewerThanMerged"
            srcfile="${tld.file.merged}"
            targetfile="${tld.file.src}" />
        <!--fail if="tldSrcNewerThanMerged" message="${tld.file.src} is newer than ${tld.file.merged}. Run the core build before the jsp build."/-->
        <!-- If core hasn't been built, and there is nothing merged, then that's an error -->
        <copy file="${tld.file.merged}" tofile="${tld.file.dest}" overwrite="true" failonerror="true"/>
        
		<compressjs comp="icemobile" path="${build.web.resources}/javascript" />
	</target>

    <target name="jar" depends="compile, skins" description="fill the jar">
        <jar destfile="${dist.dir}/${jar.file.name}" duplicate="fail">
            <fileset dir="${build.dir}/classes">
                <include name="**/*"></include>
            </fileset>
            <fileset dir="${build.resources}">
                <include name="**/*"></include>
            </fileset>
        	<fileset dir="${java.dir}" includes="**/*.java"/>
            <fileset dir="${core.build}/generated-interfaces" includes="**/*.java"/>
            <fileset dir="${core.build}/generated-jsp/base" includes="**/*.java"/>
            <manifest>
                <section name="org.icemobile">
                    <attribute name="Implementation-Title"
                               value="${product}"/>
                    <attribute name="Implementation-Version"
                               value="${version.string}"/>
                    <attribute name="Build-Number"
                               value="${build.number}"/>
                    <attribute name="Build-Time"
                               value="${build.time}"/>
                    <attribute name="Implementation-Vendor"
                               value="${company}"/>
                </section>
            </manifest>
        </jar>
        <antcall target="clean.product.info"/>

        <copy file="${dist.dir}/${jar.file.name}" todir="${lib.dir}"
              overwrite="true"/>

    </target>
    
    <target name="src-jar" depends="" >
        <jar destfile="${dist.dir}/${ant.project.name}-sources.jar">
            <fileset dir="src/main" includes="**/*.java"/>
        </jar>
    </target>

    <target name="tlddoc"
            description="Generate the component TLD Documentation in HTML format.">
        <gen.tld.doc tld.file="${tld.file.dest}"/>
    </target>

    <macrodef name="compile">
        <attribute name="src.copy.excludes" default="**/*.java"/>
        <attribute name="failonerror" default="true"/>
        <attribute name="src.javac.excludes" default=""/>
        <attribute name="core.generated.javac.excludes" default=""/>
        <attribute name="compile.target" default="1.5"/>
        <attribute name="compile.source" default="1.5"/>
        <attribute name="compile.debug" default="true"/>
        <attribute name="compile.debuglevel" default="lines,vars,source"/>

        <element name="add.javac.elements" optional="true"/>
        <element name="add.classpath.elements" optional="true"/>

        <sequential>
            <echo>Compiling ${ant.project.name}...</echo>

            <javac destdir="${build.dir}/classes" sourcepath=""
                   source="@{compile.source}"
                   target="@{compile.target}"
                   debug="@{compile.debug}"
                   debuglevel="@{compile.debuglevel}"
                   failonerror="@{failonerror}"
                   includeantruntime="false">

                <src path="${core.build}/generated-interfaces"/>
                <src path="${core.build}/generated-jsp/base"/>
                <include name="**/*.java"/>
                <exclude name="@{core.generated.javac.excludes}"/>
                <classpath refid="jsp.classpath">
                    <add.classpath.elements/>
                </classpath>
                <classpath path="${build.dir}/classes"/>
                <add.javac.elements/>
            </javac>
            
            <javac destdir="${build.dir}/classes" sourcepath=""
                   source="@{compile.source}"
                   target="@{compile.target}"
                   debug="@{compile.debug}"
                   debuglevel="@{compile.debuglevel}"
                   failonerror="@{failonerror}"
                   includeantruntime="false">

                <src path="${java.dir}"/>
                <include name="**/*.java"/>
                <exclude name="@{src.javac.excludes}"/>
                <classpath refid="jsp.classpath">
                    <add.classpath.elements/>
                </classpath>
                <classpath path="${build.dir}/classes"/>
                <add.javac.elements/>
            </javac>

            <copy todir="${build.dir}/classes" preservelastmodified="true">
                <fileset dir="${java.dir}" excludes="@{src.copy.excludes}"/>
            </copy>

        </sequential>
    </macrodef>

    <macrodef name="clean">
        <element name="add.filesets" optional="true"/>
        <sequential>
            <delete failonerror="false" includeEmptyDirs="true">
                <fileset dir="${build.dir}"/>
                <fileset dir="${dist.dir}"/>
                <add.filesets/>
            </delete>
        </sequential>
    </macrodef>

    <target name="clean">
        <echo>Cleaning ${ant.project.name}...</echo>
        <clean/>
        <!-- clean the theme folder from resources -->
        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${theme.resources.dir}"/>
        </delete>
    </target>
	
	<!-- include source images and css for sprite generation -->
    <macrodef name="buildSimulatorSkin">
        <sequential>
            <mkdir dir="build/skins/out/simulator/" />
            <copy todir="build/skins/out/simulator/">
                <fileset dir="${theme.build.dir}/simulator" />
            </copy>
        </sequential>
    </macrodef>
    
    
	<!-- include source images and css for sprite generation -->
	<macrodef name="buildSkin">
		<attribute name="skin" />
		<sequential>
			<mkdir dir="build/skins/in/@{skin}" />
			<copy todir="build/skins/in/@{skin}/">
				<fileset dir="${theme.build.dir}/base" includes="**" />
			</copy>
			<copy todir="build/skins/in/@{skin}/" overwrite="true">
				<fileset dir="${theme.build.dir}/@{skin}" includes="**" />
			</copy>
			<mkdir dir="build/skins/out/@{skin}/" />
			<copy todir="build/skins/out/@{skin}/">
				<fileset dir="build/skins/in/@{skin}/" excludes="**/*.css" />
			</copy>
		</sequential>
	</macrodef>
	
	<!-- include source images and css for sprite generation -->
    <macrodef name="buildCSS3Skin">
        <attribute name="skin" />
        <sequential>
            <mkdir dir="build/skins/in/@{skin}" />
            <copy todir="build/skins/in/@{skin}/">
                <fileset dir="${theme.build.dir}/base" includes="**" />
            </copy>
        	<copy todir="build/skins/in/@{skin}/">
                <fileset dir="${theme.build.dir}/base3" includes="**" />
            </copy>
            <copy todir="build/skins/in/@{skin}/" overwrite="true">
                <fileset dir="${theme.build.dir}/@{skin}" includes="**" />
            </copy>
            <mkdir dir="build/skins/out/@{skin}/" />
            <copy todir="build/skins/out/@{skin}/">
                <fileset dir="build/skins/in/@{skin}/" excludes="**/*.css" />
            </copy>
        </sequential>
    </macrodef>
	
	<macrodef name="buildBaseSkin">
	        <sequential>
	            <mkdir dir="build/skins/in/base" />
	            <copy todir="build/skins/in/base/">
	                <fileset dir="${theme.build.dir}/base" includes="**" />
	            </copy>
	            <copy todir="build/skins/in/base/">
	                <fileset dir="${theme.build.dir}/base3" includes="**" />
	            </copy>
	            <copy todir="build/skins/in/base/" overwrite="true">
	                <fileset dir="${theme.build.dir}/base" includes="**" />
	            </copy>
	            <mkdir dir="build/skins/out/base/" />
	            <copy todir="build/skins/out/base/">
	                <fileset dir="build/skins/in/base/" excludes="**/*.css" />
	            </copy>
	        </sequential>
	    </macrodef>

	<macrodef name="compressjs">
	    <attribute name="comp" />
	    <attribute name="path" />
	    <sequential>
	        <echo>path is @{path}</echo>
	        <echo>comp is @{comp}</echo>
	        <java jar="${lib.dir}/generator/yui-compressor.jar" fork="yes">
	            <arg line="--preserve-semi" />
	            <arg value="@{path}/@{comp}.js" />
	            <arg value="-o" />
	            <arg value="@{path}/@{comp}-min.js" />
	        </java>
	    </sequential>
	</macrodef>


</project>

