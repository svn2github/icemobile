<!--
  ~ Copyright 2004-2013 ICEsoft Technologies Canada Corp.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the
  ~ License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an "AS
  ~ IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~ express or implied. See the License for the specific language
  ~ governing permissions and limitations under the License.
  -->

<project name="icemobile-filter" default="all" basedir=".">

    <property file="local.properties"/>
    <property file="../build.properties"/>
    <property file="build.properties"/>
    <property name="root.offset" value=".."/>
    <property name="lib.dir" location="../lib"/>
    <property name="core.dir" location="../core/src/main/java"/>
    <property name="core.build" location="../core/build"/>
    <property name="java.dir" location="src/main/java"/>
    <property name="resources.dir" location="src/main/resources"/>
    <property file="${root.offset}/build.properties"/>
    <property name="conf.dir" location="./conf"/>
    <property name="product.info" value="org/icemobile/ProductInfo.java"/>
	
    <condition property="version.string" value="${version.primary}.${version.secondary}.${version.tertiary}.${release.type}">
        <isset property="release.type" />
    </condition>
    <property name="version.string" value="${version.primary}.${version.secondary}.${version.tertiary}" />

    <property name="javadoc.title" value="${product} ${product.lib} Java API Documentation" />
    <property name="javadoc.header" value="${product} ${product.lib} ${version.string}&lt;br&gt;Java API Documentation" />
    
	
    <propertyset id="product.info">
        <propertyref name="company"/>
        <propertyref name="product"/>
        <propertyref name="version.primary"/>
        <propertyref name="version.secondary"/>
        <propertyref name="version.tertiary"/>
        <propertyref name="release.type"/>
        <propertyref name="build.number"/>
        <propertyref name="revision"/>
    </propertyset>

	
    <property name="jar.file.name" value="${icemobile-filter.lib.name}.jar"/>
    <property name="doc" location="build/docs/"/>
    <property name="tld.doc" location="${doc}/tld"/>
    <property name="compile.target" value="1.5"/>
    <property name="compile.source" value="1.5"/>
    <property name="compile.debug" value="true"/>

    <condition property="version.string"
               value="${version.primary}.${version.secondary}.${version.tertiary}.${release.type}">
        <isset property="release.type"/>
    </condition>
    <property name="version.string"
              value="${version.primary}.${version.secondary}.${version.tertiary}"/>
	
    <path id="filter.classpath">
        <fileset dir="${lib.dir}" includes="*.jar" excludes="**/javax.faces.jar,**/icefaces-mobi.jar,**/icemobile-jsp.jar,**/icemobile-spring"/>
    </path>
    <path id="core.classpath">
	        <fileset dir="${lib.dir}" includes="*.jar" excludes="**/javax.faces.jar,**/jsp-api.jar,**/javax.servlet.jsp.jar,**/${icemobile-jsp.lib.name}.jar,**/${icefaces-mobi-lib-name}.jar"/>
	    </path>
    
    <tstamp>
        <format property="build.time" pattern="yyyy-mm-dd hh:mm:ss"/>
    </tstamp>

    <target name="product.info" description="update product information">
        <!-- <buildnumber/>  -->
        <copy file="${conf.dir}/${product.info}"
              tofile="${java.dir}/${product.info}"
              overwrite="true"/>
        <replace file="${java.dir}/${product.info}">
            <replacefilter token="@release.type@" value="${release.type}"/>
            <replacefilter token="@version.primary@"
                           value="${version.primary}"/>
            <replacefilter token="@version.secondary@"
                           value="${version.secondary}"/>
            <replacefilter token="@version.tertiary@"
                           value="${version.tertiary}"/>
            <replacefilter token="@build.number@" value="${build.number}"/>
            <replacefilter token="@revision@" value="${revision}"/>
        </replace>

    </target>

    <target name="clean.product.info">
        <delete file="${java.dir}/${product.info}" failonerror="no"/>
    </target>

    <target name="pre.compile" description="prepare for compilation"
            depends="">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="copy-core" description="copy the compiled core classed">
        <copy todir="${build.dir}/classes">
            <fileset dir="${core.build}/exploded" includes="**/util/*.class"/>
        </copy>
    </target>

    <target name="compile" depends="pre.compile, product.info, copy-core"
            description="compile classes">
        <compile/>
    </target>

    <target name="all" depends="jar" description="build all">
    </target>

    <target name="jar" depends="compile" description="fill the jar">
        <jar destfile="${dist.dir}/${jar.file.name}" duplicate="fail">
            <fileset dir="${build.dir}/classes">
                <include name="**/*"></include>
            </fileset>
            <fileset dir="${java.dir}" includes="**/*.java"/>
            <manifest>
                <section name="org.icemobile">
                    <attribute name="Implementation-Title"
                               value="${product}"/>
                    <attribute name="Implementation-Version"
                               value="${version.string}"/>
                    <attribute name="Build-Number"
                               value="${build.number}"/>
                    <attribute name="Build-Time"
                               value="${build.time}"/>
                    <attribute name="Implementation-Vendor"
                               value="${company}"/>
                </section>
            </manifest>
        </jar>
        <antcall target="clean.product.info"/>

        <copy file="${dist.dir}/${jar.file.name}" todir="${lib.dir}"
              overwrite="true"/>

    </target>
    
    <target name="src-jar" depends="" >
        <jar destfile="${dist.dir}/${ant.project.name}-sources.jar">
            <fileset dir="src/main" includes="**/*.java"/>
        </jar>
    </target>

    <target name="tlddoc"
            description="Generate the component TLD Documentation in HTML format.">
        <gen.tld.doc tld.file="${tld.file}"/>
    </target>

    <macrodef name="compile">
        <attribute name="src.copy.excludes" default="**/*.java"/>
        <attribute name="failonerror" default="true"/>
        <attribute name="src.javac.excludes" default=""/>
        <attribute name="compile.target" default="1.5"/>
        <attribute name="compile.source" default="1.5"/>
        <attribute name="compile.debug" default="true"/>
        <attribute name="compile.debuglevel" default="lines,vars,source"/>
        <attribute name="src.dir" default="${java.dir}"/>

        <element name="add.javac.elements" optional="true"/>
        <element name="add.classpath.elements" optional="true"/>

        <sequential>
            <echo>Compiling ${ant.project.name}...</echo>
            <mkdir dir="${java.dir}"/>
            <mkdir dir="${build.dir}/classes"/>

            <javac destdir="${classes.dir}" sourcepath=""
                   source="@{compile.source}"
                   target="@{compile.target}"
                   debug="@{compile.debug}"
                   debuglevel="@{compile.debuglevel}"
                   failonerror="@{failonerror}">

                <src location="@{src.dir}"/>
                <include name="**/*.java"/>
                <exclude name="@{src.javac.excludes}"/>
                <classpath refid="filter.classpath">
                    <add.classpath.elements/>
                </classpath>
                <add.javac.elements/>

            </javac>

            <copy todir="${build.dir}/classes" preservelastmodified="true">
                <fileset dir="${java.dir}" excludes="@{src.copy.excludes}"/>
            </copy>

        </sequential>
    </macrodef>

    <macrodef name="clean">
        <element name="add.filesets" optional="true"/>
        <sequential>
            <delete failonerror="false" includeEmptyDirs="true">
                <fileset dir="${build.dir}"/>
                <fileset dir="${dist.dir}"/>
                <add.filesets/>
            </delete>
        </sequential>
    </macrodef>

    <target name="clean">
        <echo>Cleaning ${ant.project.name}...</echo>
        <clean/>
    </target>

</project>

